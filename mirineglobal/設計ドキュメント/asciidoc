[upperroman]
. *要件定義：*

== ドキュメントを使う目的：

* プログラムで使用する関数、ライブラリの目的が分かるようになる。
* 入力・出力イメージ全体の概要またデータの可視化の範囲を明確化する。

== 基本設計の内容：

* プログラムの目的である。
* 使用するライブラリ。
* 入力・出力のイメージである。

[upperroman, start=2]
. *基本設計：*

== プログラムの目的：

* 株価のデータを取得し、terminal入力で指定した、会社コードに対し、取得開始日から、現時点までの1
日単位の株価を表示する。
* 取得したデータをCSVファイルとして保存しグラフを作成する。
* 開発環境が簡単に用意でき、かつ本番環境と共通化できるためファイルをdockerにアップロードする。

== 使用するライブラリ：

image:media/image1.png[テキスト
自動的に生成された説明,width=456,height=129]

* Sys: terminalでパラメータを読むため。
* Datetime: 日付の管理ため。
* Yfinance: Yahoo financeのウェブサイトからデータを取得するため。
* Plotly: グラフを作成するため。
* Pandas: CSVファイルを操作するため。
* Logging: ログのファイルを作成するため。

== 入力・出力のイメージ：

* terminal入力：python <ファイル名> <ストック名> <日付>

image:media/image2.png[image,width=566,height=68]

* CSVファイルのイメージ：

* IDEのterminalで：

image:media/image3.png[image,width=566,height=194]

* フォルダで：

image:media/image4.png[image,width=566,height=92]

* グラフのイメージ：

image:media/image5.png[グラフ が含まれている画像
自動的に生成された説明,width=553,height=395]

* Dockerにアップロード：

* Terminalで：docker build –tag <イメージ名>

image:media/image6.png[image,width=648,height=91]

* Docker Desktopアプリでイメージを見える：

image:media/image7.png[グラフィカル ユーザー インターフェイス, テキスト,
アプリケーション, Web サイト
自動的に生成された説明,width=566,height=179]

* UbuntuでDocker Imageを実行する：

* Terminalで：docker run -it <イメージ名> bash

image:media/image8.png[テキスト
自動的に生成された説明,width=544,height=214]

* Docker Desktopでチェックできる：

image:media/image9.png[モニター画面に映るウェブサイトのスクリーンショット
自動的に生成された説明,width=566,height=136]
